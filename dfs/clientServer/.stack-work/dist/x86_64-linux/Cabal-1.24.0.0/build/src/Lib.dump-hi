
==================== FINAL INTERFACE ====================
2017-02-01 16:24:25.44572 UTC

interface clientServer-0.1.0.0-DLV0f8ZBtlqAJ3yYHbtF5Y:Lib 8001
  interface hash: e449e7068d7dd201709f3160b6bb394a
  ABI hash: 38d462a8c002ce927311eca8ae3b9c8e
  export-list hash: 478cb9615162c816634d928365839a0f
  orphan hash: 760990a0b6a1418f74b47fa985345839
  flag hash: db8d01784fa49848e6b83127176a1bac
  sig of: Nothing
  used TH splices: True
  where
exports:
  Lib.startApp
module dependencies:
package dependencies: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov
                      aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz
                      appar-0.1.4@appar-0.1.4-1in4Ewd8JBkAYDZSWXLSe0
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1@async-2.1.1-xFiBzw9xoB8HPZAuxUY2o
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR
                      auto-update-0.1.4@auto-update-0.1.4-GAesfFmqoZzBz6e09kRyzb
                      base-4.9.0.0
                      base-compat-0.9.1@base-compat-0.9.1-tmPpmtbHbvIDjFWbkjGrR
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-5dPoF8dzhwzBaEB2MvnmIS
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-KWDLbdBYSBoALiMW0LHIz1
                      blaze-html-0.8.1.3@blaze-html-0.8.1.3-8MBPJsFNBtBBD2gWERenva
                      blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-IE161DWDHNXF9O8bBguli5
                      bson-0.3.2.3@bson-0.3.2.3-3QA3aP5EtCyCltXUzEKOsQ
                      byteable-0.1.1@byteable-0.1.1-15aIBCArSOBEnGxArzrDTM
                      byteorder-1.0.4@byteorder-1.0.4-BbL4c17EpZrL9PcZm0xys9
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      bytestring-conversion-0.3.1@bytestring-conversion-0.3.1-EvX949he2UAKBbGbE7IZfu
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-FlqweN7AuKj9EdU2arVEt4
                      cipher-aes-0.2.11@cipher-aes-0.2.11-6IDqXzfBW6B3WK2bKJbiBh
                      containers-0.5.7.1@containers-0.5.7.1
                      cprng-aes-0.6.1@cprng-aes-0.6.1-COLYQrn2KP0KrG5tq2u9OS
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-Iwzx9devSK6HQoOjujg46u
                      crypto-random-0.0.9@crypto-random-0.0.9-GQAZIw8UH93GFERaAFFYYo
                      cryptohash-0.11.9@cryptohash-0.11.9-9KNu0EEbreBFrmNJAeHgYz
                      cryptonite-0.19@cryptonite-0.19-G9PYO4oOEqhDTta2u9rAaU
                      data-binary-ieee754-0.4.4@data-binary-ieee754-0.4.4-F1HjhwdV1xx5grS0eMjeg2
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      double-conversion-2.0.1.0@double-conversion-2.0.1.0-GBJeLbJOvPcIufCPOIwofV
                      file-embed-0.0.10@file-embed-0.0.10-IXfudWSq57y1Athysk5ifZ
                      filepath-1.4.1.0@filepath-1.4.1.0
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      hashtables-1.2.1.0@hashtables-1.2.1.0-97BixhaJIWTIDAaThqJujl
                      http-api-data-0.2.4@http-api-data-0.2.4-3jwS7OrPl3l4oJfG3gRZ5C
                      http-date-0.0.6.1@http-date-0.0.6.1-150spKQYCuoIrltdbMmYGs
                      http-media-0.6.4@http-media-0.6.4-82jDVCpdN5H696EFF5l5I4
                      http-types-0.9.1@http-types-0.9.1-8WdUZL4twHzANJbxvb1Aoj
                      http2-1.6.2@http2-1.6.2-8AbNCX9FS8K1gUe78Emp1g integer-gmp-1.0.0.1
                      iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9
                      lifted-base-0.2.3.8@lifted-base-0.2.3.8-KLkd0w1UJqu6nE8oVTTEBy
                      memory-0.13@memory-0.13-ABHR5331zHK9scHPRr7afU
                      mime-types-0.1.0.7@mime-types-0.1.0.7-AxQ64wFjikqCSdK5pSeZvh
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      mongoDB-2.1.1.1@mongoDB-2.1.1.1-5wYXyk7zdwHHB6m4bwUEQN
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2
                      nonce-1.0.2@nonce-1.0.2-187zSgt2OIA84d9i9xgwRX
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      psqueues-0.2.2.3@psqueues-0.2.2.3-YN2xKllZOMJLtAgRHlkEw
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      random-shuffle-0.0.4@random-shuffle-0.0.4-LfeDYNPfwrQ2o9p6tw2M9l
                      scientific-0.3.4.9@scientific-0.3.4.9-6oTYuCcx6H5BsTGU7D2Gk3
                      securemem-0.1.9@securemem-0.1.9-AlUbMorzPNe4lwnV15ASIa
                      servant-0.8.1@servant-0.8.1-C41nqWozRFwEkLnlLTnUQc
                      servant-server-0.8.1@servant-server-0.8.1-K0euN04vPTa45wy4acLZH0
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-FZS0Stqtwd5AOyFRQgM4IV
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      streaming-commons-0.1.16@streaming-commons-0.1.16-KtRawhq8O97EWCabefpk66
                      string-conversions-0.4@string-conversions-0.4-8T0UFmRDEly2gsNJzmHrNQ
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-1j5dGjxxtiTDuAsO86iSk0
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      unix-2.7.2.0@unix-2.7.2.0
                      unix-compat-0.4.2.0@unix-compat-0.4.2.0-GNHotEMWE5dJ4oYFhgibIV
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-2T8mBCuEDlXDo8zed8Onw4
                      vault-0.3.0.6@vault-0.3.0.6-CA9Xj82tAPe9nD32xVMgDG
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
                      wai-3.2.1.1@wai-3.2.1.1-f77bMYZGLQBAD3XJrvGiW
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-I87kXUnC7uoJHoj38CLHrC
                      warp-3.2.9@warp-3.2.9-GXzPTh1481F3R0zZxzj1WW
                      word8-0.1.2@word8-0.1.2-2E1SgvvAV2fK8vZPDHbRan
                      zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV
orphans: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov:Control.Monad.Random
         aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Generic
         aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Instances
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         mongoDB-2.1.1.1@mongoDB-2.1.1.1-5wYXyk7zdwHHB6m4bwUEQN:Database.MongoDB.Internal.Util
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Range
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2:Network.URI
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         servant-0.8.1@servant-0.8.1-C41nqWozRFwEkLnlLTnUQc:Servant.API.ContentTypes
                         servant-0.8.1@servant-0.8.1-C41nqWozRFwEkLnlLTnUQc:Servant.API.Verbs
                         servant-0.8.1@servant-0.8.1-C41nqWozRFwEkLnlLTnUQc:Servant.Utils.Links
                         servant-server-0.8.1@servant-server-0.8.1-K0euN04vPTa45wy4acLZH0:Servant.Server.Internal
                         servant-server-0.8.1@servant-server-0.8.1-K0euN04vPTa45wy4acLZH0:Servant.Server.Internal.BasicAuth
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV:Codec.Compression.Zlib.Stream
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson 94b59824488f369f190c261b6e39e7ba
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Encode.Builder 4eee2ee5f2090f840ecac61c149c40fb
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Encode.Functions ebb3073053344024d09868b63d0689e7
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.TH 869262ef224a0287f5d5fc093506acd2
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Class c9d74667288c52e23279e16b75c64023
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Internal fd763f29fceeda2453c690ef7d94155c
import  -/  base-4.9.0.0:Control.Applicative 7728b33d6969dce59e89474349eb1397
import  -/  base-4.9.0.0:Control.Monad 7767aebfd53f0b584cef2fe66ad3986c
import  -/  base-4.9.0.0:Control.Monad.IO.Class d702028d883e700bd7066b031147030d
import  -/  base-4.9.0.0:Data.Char eb33dc25ecb52d018a0ca26590e2b50b
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:Data.Monoid 1efae021212a10c79fd75960dc0a1d99
import  -/  base-4.9.0.0:Data.OldList 0058409f994fb13ae0616e3f1e5b4dae
import  -/  base-4.9.0.0:Data.Proxy aa86c72628cf3b1ceb0816ca84687d80
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Char 3824744793840b1b7a48109a01ef7f24
import  -/  base-4.9.0.0:GHC.Generics 8e2a7658e8b966c1d29d0d5fd4129f38
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.Environment ee0914a962f5508d0fd404c89ee4999b
import  -/  base-4.9.0.0:System.IO eb1d40aa793a4047069a5023f2ebcfe3
import  -/  base-4.9.0.0:Text.Printf 981db3fab2db52a63576c71c790058bf
import  -/  bson-0.3.2.3@bson-0.3.2.3-3QA3aP5EtCyCltXUzEKOsQ:Data.Bson 609b35b07f554dfa69c4b31dfeed380e
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder 1dab9565fdfefe0bd2689aa8ec2c5013
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 24b19ef74cea78e4c18332bed9f0491d
import  -/  directory-1.2.6.2@directory-1.2.6.2:System.Directory f7c57c4a392d1767b38addc37d00ceed
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-5wYXyk7zdwHHB6m4bwUEQN:Database.MongoDB 2f74f1157c9bd4aada7bc55dbcb0be00
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-5wYXyk7zdwHHB6m4bwUEQN:Database.MongoDB.Connection 1ca48cbfe54c5673e2ae808016ab1ee0
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-5wYXyk7zdwHHB6m4bwUEQN:Database.MongoDB.Internal.Protocol 2b680fd5e20e13b4e86e99b75df577ba
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-5wYXyk7zdwHHB6m4bwUEQN:Database.MongoDB.Query 11154b7ccce00f58189d815abaac6794
import  -/  mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM:Control.Monad.Trans 0a058c68d8234a5f23a0f2e61a261faf
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network fe4a3a40192a968130a171e8dca1101b
import  -/  servant-0.8.1@servant-0.8.1-C41nqWozRFwEkLnlLTnUQc:Servant.API f776f4c0cef16b5ab9071a6e137100c3
import  -/  servant-0.8.1@servant-0.8.1-C41nqWozRFwEkLnlLTnUQc:Servant.API.ContentTypes 5e55115aa3ef54102b3605c0c11eed9b
import  -/  servant-0.8.1@servant-0.8.1-C41nqWozRFwEkLnlLTnUQc:Servant.API.Sub e4e89bb4a51d80b0579d311b33f93ee7
import  -/  servant-0.8.1@servant-0.8.1-C41nqWozRFwEkLnlLTnUQc:Servant.API.Verbs 5f4ac9be0cb9afced00422fa5dc5d9ab
import  -/  servant-server-0.8.1@servant-server-0.8.1-K0euN04vPTa45wy4acLZH0:Servant 90a21443b9bcd78bfc4a5ddf791c82dd
import  -/  servant-server-0.8.1@servant-server-0.8.1-K0euN04vPTa45wy4acLZH0:Servant.Server 23109e4fcb082826fca03dc11d7c22b0
import  -/  servant-server-0.8.1@servant-server-0.8.1-K0euN04vPTa45wy4acLZH0:Servant.Server.Internal a62c9ae9bcd7be33373d5ca876af924b
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text 6515f3179e27a91345842b6e634f584c
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.IO 4bbe6162b66e24a3ce48e078208c8e49
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Except 71b1d86204f6908788cb5223e3c73193
import  -/  wai-3.2.1.1@wai-3.2.1.1-f77bMYZGLQBAD3XJrvGiW:Network.Wai f10fb472d685284a8637bf34e58bc7f2
import  -/  warp-3.2.9@warp-3.2.9-GXzPTh1481F3R0zZxzj1WW:Network.Wai.Handler.Warp 889486c28299135fca865dcd9b9b73e7
84a3d3c4b6b50f42faed19dc90769bf0
  $fEqFile :: GHC.Classes.Eq Lib.File
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:. @ Lib.File Lib.$fEqFile_$c== Lib.$fEqFile_$c/= -}
84a3d3c4b6b50f42faed19dc90769bf0
  $fEqFile_$c/= :: Lib.File -> Lib.File -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.File) (b :: Lib.File) ->
                 case Lib.$fEqFile_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
84a3d3c4b6b50f42faed19dc90769bf0
  $fEqFile_$c== :: Lib.File -> Lib.File -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.File) (w1 :: Lib.File) ->
                 case w of ww { Lib.File ww1 ww2 ww3 ->
                 case w1 of ww4 { Lib.File ww5 ww6 ww7 ->
                 Lib.$w$c== ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
5565f9d0a0fb57f559f0e2db40ea7aa4
  $fEqUser :: GHC.Classes.Eq Lib.User
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:. @ Lib.User Lib.$fEqUser_$c== Lib.$fEqUser_$c/= -}
5565f9d0a0fb57f559f0e2db40ea7aa4
  $fEqUser_$c/= :: Lib.User -> Lib.User -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.User) (w1 :: Lib.User) ->
                 case w of ww { Lib.User ww1 ww2 ->
                 case w1 of ww3 { Lib.User ww4 ww5 ->
                 Lib.$w$c/= ww1 ww2 ww4 ww5 } }) -}
5565f9d0a0fb57f559f0e2db40ea7aa4
  $fEqUser_$c== :: Lib.User -> Lib.User -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.User) (w1 :: Lib.User) ->
                 case w of ww { Lib.User ww1 ww2 ->
                 case w1 of ww3 { Lib.User ww4 ww5 ->
                 Lib.$w$c==1 ww1 ww2 ww4 ww5 } }) -}
84a3d3c4b6b50f42faed19dc90769bf0
  $fFromJSONFile :: Data.Aeson.Types.Class.FromJSON Lib.File
  DFunId
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Lib.$fFromJSONFile_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <Lib.File>_N)) -}
914a2aee5b891eaa614faabfdfd40f89
  $fFromJSONFile1 :: Data.Bson.Label
  {- Unfolding: (Data.Text.Show.unpackCString# "fileLock"#) -}
4b9a557759b963c06a4e5259c5d78724
  $fFromJSONFile2 :: Data.Bson.Label
  {- Unfolding: (Data.Text.Show.unpackCString# "fileContents"#) -}
3f823c0c76032e2799ca0d7bac2608dc
  $fFromJSONFile3 :: Data.Bson.Label
  {- Unfolding: (Data.Text.Show.unpackCString# "fileName"#) -}
87e0bfa49debc05ef54fdc8d7432ea5a
  $fFromJSONFile4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Object"#) -}
269f909a2138329015158a3280305a26
  $fFromJSONFile5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Lib.File"#) -}
8b8ceddbaadd186b68613c87fdd88d16
  $fFromJSONFile6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "File"#) -}
84a3d3c4b6b50f42faed19dc90769bf0
  $fFromJSONFile_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Lib.File
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (value :: Data.Aeson.Types.Internal.Value) ->
                 case value of wild {
                   DEFAULT
                   -> Data.Aeson.TH.parseTypeMismatch'
                        @ Lib.File
                        Lib.$fFromJSONFile6
                        Lib.$fFromJSONFile5
                        Lib.$fFromJSONFile4
                        (case wild of wild1 {
                           Data.Aeson.Types.Internal.Array ds1 -> Data.Aeson.TH.valueConName5
                           Data.Aeson.Types.Internal.String ds1 -> Data.Aeson.TH.valueConName4
                           Data.Aeson.Types.Internal.Number ds1 -> Data.Aeson.TH.valueConName3
                           Data.Aeson.Types.Internal.Bool ds1 -> Data.Aeson.TH.valueConName2
                           Data.Aeson.Types.Internal.Null -> Data.Aeson.TH.valueConName1 })
                   Data.Aeson.Types.Internal.Object recObj
                   -> let {
                        m :: Data.Aeson.Types.Internal.Parser [GHC.Types.Char]
                        = case Lib.$fFromJSONFile3 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField
                            @ [GHC.Types.Char]
                            Data.Aeson.Types.Instances.$fFromJSON[]0_$cparseJSON
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <[GHC.Types.Char]>_N))
                            Lib.$fFromJSONFile5
                            Lib.$fFromJSONFile6
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      let {
                        e :: Data.Aeson.Types.Internal.Parser GHC.Base.String
                        = case Lib.$fFromJSONFile2 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField
                            @ [GHC.Types.Char]
                            Data.Aeson.Types.Instances.$fFromJSON[]0_$cparseJSON
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <[GHC.Types.Char]>_N))
                            Lib.$fFromJSONFile5
                            Lib.$fFromJSONFile6
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      let {
                        e1 :: Data.Aeson.Types.Internal.Parser GHC.Types.Bool
                        = case Lib.$fFromJSONFile1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField
                            @ GHC.Types.Bool
                            Data.Aeson.Types.Instances.$fFromJSONBool_$cparseJSON
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <GHC.Types.Bool>_N))
                            Lib.$fFromJSONFile5
                            Lib.$fFromJSONFile6
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      (\ @ (f :: * -> *)
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f r)
                         (ks :: Data.Aeson.Types.Internal.Success Lib.File f r) ->
                       m `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Char]>_R)
                         @ f
                         @ r
                         path
                         kf
                         (\ (a1 :: [GHC.Types.Char]) ->
                          e `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0] <GHC.Base.String>_R)
                            @ f
                            @ r
                            path
                            kf
                            (\ (a2 :: GHC.Base.String) ->
                             e1
                               `cast`
                             (Data.Aeson.Types.Internal.N:Parser[0] <GHC.Types.Bool>_R)
                               @ f
                               @ r
                               path
                               kf
                               (\ (a4 :: GHC.Types.Bool) -> ks (Lib.File a1 a2 a4)))))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Lib.File>_R)) }) -}
5565f9d0a0fb57f559f0e2db40ea7aa4
  $fFromJSONUser :: Data.Aeson.Types.Class.FromJSON Lib.User
  DFunId
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Lib.$fFromJSONUser_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <Lib.User>_N)) -}
4791296577fe5fae140a0b57ee5d4423
  $fFromJSONUser1 :: Data.Bson.Label
  {- Unfolding: (Data.Text.Show.unpackCString# "password"#) -}
055235225f8afa7f17f46356fd95428f
  $fFromJSONUser2 :: Data.Bson.Label
  {- Unfolding: (Data.Text.Show.unpackCString# "username"#) -}
af86f24cc3ed54589a56738d31858f15
  $fFromJSONUser3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Lib.User"#) -}
98b6b044207a2ab353c5b290e6821f2f
  $fFromJSONUser4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "User"#) -}
5565f9d0a0fb57f559f0e2db40ea7aa4
  $fFromJSONUser_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Lib.User
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (value :: Data.Aeson.Types.Internal.Value) ->
                 case value of wild {
                   DEFAULT
                   -> Data.Aeson.TH.parseTypeMismatch'
                        @ Lib.User
                        Lib.$fFromJSONUser4
                        Lib.$fFromJSONUser3
                        Lib.$fFromJSONFile4
                        (case wild of wild1 {
                           Data.Aeson.Types.Internal.Array ds1 -> Data.Aeson.TH.valueConName5
                           Data.Aeson.Types.Internal.String ds1 -> Data.Aeson.TH.valueConName4
                           Data.Aeson.Types.Internal.Number ds1 -> Data.Aeson.TH.valueConName3
                           Data.Aeson.Types.Internal.Bool ds1 -> Data.Aeson.TH.valueConName2
                           Data.Aeson.Types.Internal.Null -> Data.Aeson.TH.valueConName1 })
                   Data.Aeson.Types.Internal.Object recObj
                   -> let {
                        m :: Data.Aeson.Types.Internal.Parser [GHC.Types.Char]
                        = case Lib.$fFromJSONUser2 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField
                            @ [GHC.Types.Char]
                            Data.Aeson.Types.Instances.$fFromJSON[]0_$cparseJSON
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <[GHC.Types.Char]>_N))
                            Lib.$fFromJSONUser3
                            Lib.$fFromJSONUser4
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      let {
                        e :: Data.Aeson.Types.Internal.Parser GHC.Base.String
                        = case Lib.$fFromJSONUser1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField
                            @ [GHC.Types.Char]
                            Data.Aeson.Types.Instances.$fFromJSON[]0_$cparseJSON
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <[GHC.Types.Char]>_N))
                            Lib.$fFromJSONUser3
                            Lib.$fFromJSONUser4
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      (\ @ (f :: * -> *)
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f r)
                         (ks :: Data.Aeson.Types.Internal.Success Lib.User f r) ->
                       m `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Char]>_R)
                         @ f
                         @ r
                         path
                         kf
                         (\ (a1 :: [GHC.Types.Char]) ->
                          e `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0] <GHC.Base.String>_R)
                            @ f
                            @ r
                            path
                            kf
                            (\ (a2 :: GHC.Base.String) -> ks (Lib.User a1 a2))))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Lib.User>_R)) }) -}
84a3d3c4b6b50f42faed19dc90769bf0
  $fShowFile :: GHC.Show.Show Lib.File
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.File
                  Lib.$fShowFile_$cshowsPrec
                  Lib.$fShowFile_$cshow
                  Lib.$fShowFile_$cshowList -}
84a3d3c4b6b50f42faed19dc90769bf0
  $fShowFile1 :: Lib.File -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Lib.File) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.File ww1 ww2 ww3 ->
                 Lib.$w$cshowsPrec 0# ww1 ww2 ww3 w1 }) -}
030a41ce8df2f494aa81c478d8dce25a
  $fShowFile2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
c6fec947626ca279e03087a4cc63b9f7
  $fShowFile3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fileLock = "#) -}
a809a6d818fedc7c8b5f4cfb8a996541
  $fShowFile4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fileContents = "#) -}
2a3d584b9519a6ec3288d211a7ee5985
  $fShowFile5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
6c8c4bc449afcc3b5608fc10d1546858
  $fShowFile6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fileName = "#) -}
a3502ad788ce4480ac7d8237be6aa629
  $fShowFile7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "File {"#) -}
84a3d3c4b6b50f42faed19dc90769bf0
  $fShowFile_$cshow :: Lib.File -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.File) ->
                 Lib.$fShowFile_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
84a3d3c4b6b50f42faed19dc90769bf0
  $fShowFile_$cshowList :: [Lib.File] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.File Lib.$fShowFile1) -}
84a3d3c4b6b50f42faed19dc90769bf0
  $fShowFile_$cshowsPrec ::
    GHC.Types.Int -> Lib.File -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.File) (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.File ww3 ww4 ww5 ->
                 Lib.$w$cshowsPrec ww1 ww3 ww4 ww5 w2 } }) -}
5565f9d0a0fb57f559f0e2db40ea7aa4
  $fShowUser :: GHC.Show.Show Lib.User
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.User
                  Lib.$fShowUser_$cshowsPrec
                  Lib.$fShowUser_$cshow
                  Lib.$fShowUser_$cshowList -}
5565f9d0a0fb57f559f0e2db40ea7aa4
  $fShowUser1 :: Lib.User -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Lib.User) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.User ww1 ww2 ->
                 Lib.$w$cshowsPrec1 0# ww1 ww2 w1 }) -}
44246942d4f9fb03f40afb137ce7c105
  $fShowUser2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "password = "#) -}
ab83d87065ca84e68e8e2a3de7f180d9
  $fShowUser3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "username = "#) -}
81dc083ea0bbe3463fdb95b1ff0d48dc
  $fShowUser4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "User {"#) -}
5565f9d0a0fb57f559f0e2db40ea7aa4
  $fShowUser_$cshow :: Lib.User -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.User) ->
                 Lib.$fShowUser_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5565f9d0a0fb57f559f0e2db40ea7aa4
  $fShowUser_$cshowList :: [Lib.User] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.User Lib.$fShowUser1) -}
5565f9d0a0fb57f559f0e2db40ea7aa4
  $fShowUser_$cshowsPrec ::
    GHC.Types.Int -> Lib.User -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.User) (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.User ww3 ww4 ->
                 Lib.$w$cshowsPrec1 ww1 ww3 ww4 w2 } }) -}
84a3d3c4b6b50f42faed19dc90769bf0
  $fToJSONFile :: Data.Aeson.Types.Class.ToJSON Lib.File
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.File
                  Lib.$fToJSONFile_$ctoJSON
                  Lib.$fToJSONFile_$ctoEncoding -}
796f35262cb45184cfafd219b6290911
  $fToJSONFile1 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
84a3d3c4b6b50f42faed19dc90769bf0
  $fToJSONFile_$ctoEncoding ::
    Lib.File -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.File) ->
                 case w of ww { Lib.File ww1 ww2 ww3 ->
                 Lib.$w$ctoEncoding ww1 ww2 ww3 }) -}
84a3d3c4b6b50f42faed19dc90769bf0
  $fToJSONFile_$ctoJSON ::
    Lib.File -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.File) ->
                 case w of ww { Lib.File ww1 ww2 ww3 ->
                 case Lib.$w$ctoJSON ww1 ww2 ww3 of ww4 { Unit# ww5 ->
                 Data.Aeson.Types.Internal.Object ww5 } }) -}
5565f9d0a0fb57f559f0e2db40ea7aa4
  $fToJSONUser :: Data.Aeson.Types.Class.ToJSON Lib.User
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.User
                  Lib.$fToJSONUser_$ctoJSON
                  Lib.$fToJSONUser_$ctoEncoding -}
5565f9d0a0fb57f559f0e2db40ea7aa4
  $fToJSONUser_$ctoEncoding ::
    Lib.User -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.User) ->
                 case w of ww { Lib.User ww1 ww2 ->
                 Lib.$w$ctoEncoding1 ww1 ww2 }) -}
5565f9d0a0fb57f559f0e2db40ea7aa4
  $fToJSONUser_$ctoJSON ::
    Lib.User -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.User) ->
                 case w of ww { Lib.User ww1 ww2 ->
                 case Lib.$w$ctoJSON1 ww1 ww2 of ww3 { Unit# ww4 ->
                 Data.Aeson.Types.Internal.Object ww4 } }) -}
610b2791ff6eed8ef4e55daae2961ba3
  $s$fApplicativeReaderT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
                  (Lib.$s$fApplicativeReaderT_$s$fApplicativeReaderT_$cp1Applicative
                     @ r)
                  (\ @ a (eta :: a) (eta1 :: r) ->
                   GHC.Base.const
                     @ (GHC.Types.IO a)
                     @ r
                     (GHC.Base.returnIO @ a eta)
                     eta1)
                    `cast`
                  (forall (a :: <*>_N).
                   <a>_R
                   ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N <r>_R <GHC.Types.IO>_R <a>_N))
                  (Lib.$s$fApplicativeReaderT_$s$fApplicativeReaderT_$c<*> @ r)
                  (Control.Monad.Trans.Reader.$fApplicativeReaderT_$c*>
                     @ GHC.Types.IO
                     @ r
                     Lib.$s$fApplicativeReaderT_$dApplicative)
                  (Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<*
                     @ GHC.Types.IO
                     @ r
                     Lib.$s$fApplicativeReaderT_$dApplicative) -}
0503785d17ce6fbd9b892c144fa1a67f
  $s$fApplicativeReaderT_$dApplicative ::
    GHC.Base.Applicative GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fApplicativeIO -}
1f172023243bd01f28f41c0accdee2e0
  $s$fApplicativeReaderT_$s$fApplicativeReaderT_$c<*> ::
    Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,1*C1(U))))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (f :: Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO (a -> b))
                   (v :: Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b)
                   (\ (tpl :: r -> GHC.Types.IO b) -> tpl)
                     `cast`
                   (<r -> GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N <r>_R <GHC.Types.IO>_R <b>_N))
                   (\ (r1 :: r) ->
                    GHC.Base.$fApplicativeIO_$sap
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ GHC.Types.IO
                         @ (a -> b)
                         f
                         r1)
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ GHC.Types.IO
                         @ a
                         v
                         r1))) -}
fa91ac3b290064f5658a1ddac73a87ce
  $s$fApplicativeReaderT_$s$fApplicativeReaderT_$cp1Applicative ::
    GHC.Base.Functor
      (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fApplicativeReaderT_$s$fFunctorReaderT -}
186ba59af4e737c8f9b064e7120ea57a
  $s$fApplicativeReaderT_$s$fFunctorReaderT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
                  (Lib.$s$fApplicativeReaderT_$s$fFunctorReaderT_$cfmap @ r)
                  (Lib.$s$fApplicativeReaderT_$s$fFunctorReaderT_$c<$ @ r) -}
3dc52279d1246dbb3376945183047694
  $s$fApplicativeReaderT_$s$fFunctorReaderT_$c<$ ::
    a
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U><C(C(S(SL))),1*C1(C1(U(U,A)))><L,U><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ r
                   @ a
                   @ b
                   (eta :: a)
                   (eta1 :: Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b)
                   (eta2 :: r) ->
                 let {
                   f :: b -> a {- Arity: 1 -} = \ (ds :: b) -> eta
                 } in
                 (GHC.Base.$
                    @ 'GHC.Types.PtrRepLifted
                    @ (r -> GHC.Types.IO a)
                    @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a)
                    (\ (tpl :: r -> GHC.Types.IO a) -> tpl)
                      `cast`
                    (<r -> GHC.Types.IO a>_R
                     ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N <r>_R <GHC.Types.IO>_R <a>_N))
                    (let {
                       g :: r -> GHC.Types.IO b
                       = Control.Monad.Trans.Reader.runReaderT
                           @ r
                           @ *
                           @ GHC.Types.IO
                           @ b
                           eta1
                     } in
                     (\ (x :: r)
                        (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                      (GHC.Base.$fFunctorIO_$cfmap @ b @ a f (g x))
                        `cast`
                      (GHC.Types.N:IO[0] <a>_R)
                        eta3)
                       `cast`
                     (<r>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))))
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N <r>_R <GHC.Types.IO>_R <a>_N)
                   eta2)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <a>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N <r>_R <GHC.Types.IO>_R <a>_N)) -}
8ce23a201ddd15176c0e355cf8c81dc7
  $s$fApplicativeReaderT_$s$fFunctorReaderT_$cfmap ::
    (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,1*C1(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ r
                   @ a
                   @ b
                   (f :: a -> b)
                   (eta :: Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a)
                   (eta1 :: r) ->
                 (GHC.Base.$
                    @ 'GHC.Types.PtrRepLifted
                    @ (r -> GHC.Types.IO b)
                    @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b)
                    (\ (tpl :: r -> GHC.Types.IO b) -> tpl)
                      `cast`
                    (<r -> GHC.Types.IO b>_R
                     ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N <r>_R <GHC.Types.IO>_R <b>_N))
                    (let {
                       g :: r -> GHC.Types.IO a
                       = Control.Monad.Trans.Reader.runReaderT
                           @ r
                           @ *
                           @ GHC.Types.IO
                           @ a
                           eta
                     } in
                     (\ (x :: r)
                        (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                      (GHC.Base.$fFunctorIO_$cfmap @ a @ b f (g x))
                        `cast`
                      (GHC.Types.N:IO[0] <b>_R)
                        eta2)
                       `cast`
                     (<r>_R ->_R Sym (GHC.Types.N:IO[0] <b>_R))))
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N <r>_R <GHC.Types.IO>_R <b>_N)
                   eta1)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <a -> b>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N <r>_R <GHC.Types.IO>_R <b>_N)) -}
9f380b7e4592407c8cd707b50c59f60a
  $s$fMonadReaderT ::
    GHC.Base.Monad (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
                  (Lib.$s$fMonadReaderT_$s$fMonadReaderT_$cp1Monad @ r)
                  (Lib.$s$fMonadReaderT_$s$fMonadReaderT_$c>>= @ r)
                  (Lib.$s$fMonadReaderT_$s$fMonadReaderT_$c>> @ r)
                  (Lib.$s$fMonadReaderT_$s$fMonadReaderT_$creturn @ r)
                  (Lib.$s$fMonadReaderT_$s$fMonadReaderT_$cfail @ r) -}
41817a872caac11d721a0ccdd7ecce67
  $s$fMonadReaderT_$s$fMonadReaderT_$c>> ::
    Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a)
                   (k :: Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b)
                   (\ (tpl :: r -> GHC.Types.IO b) -> tpl)
                     `cast`
                   (<r -> GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N <r>_R <GHC.Types.IO>_R <b>_N))
                   (\ (r1 :: r) ->
                    GHC.Base.bindIO
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ GHC.Types.IO
                         @ a
                         m1
                         r1)
                      (\ (a1 :: a) ->
                       Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ GHC.Types.IO
                         @ b
                         k
                         r1))) -}
84396e3a984bcb538578e60c95ca5e63
  $s$fMonadReaderT_$s$fMonadReaderT_$c>>= ::
    Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a
    -> (a -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b)
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,U)))><L,1*C1(C1(C1(U(U,U))))><L,U><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a)
                   (k :: a -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b)
                   (\ (tpl :: r -> GHC.Types.IO b) -> tpl)
                     `cast`
                   (<r -> GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N <r>_R <GHC.Types.IO>_R <b>_N))
                   (\ (r1 :: r) ->
                    GHC.Base.bindIO
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ GHC.Types.IO
                         @ a
                         m1
                         r1)
                      (\ (a1 :: a) ->
                       Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ GHC.Types.IO
                         @ b
                         (k a1)
                         r1))) -}
5c527dcecdb82b823cde37b7bcd7fe09
  $s$fMonadReaderT_$s$fMonadReaderT_$cfail ::
    GHC.Base.String
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a
  {- Arity: 3, Strictness: <B,U><B,A><B,U>x,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ r @ a (msg :: GHC.Base.String) ->
                 let {
                   eta :: GHC.Types.IO a = GHC.Base.$fMonadIO_$cfail @ a msg
                 } in
                 (\ (eta1 :: r) -> GHC.Base.const @ (GHC.Types.IO a) @ r eta eta1)
                   `cast`
                 (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                           <*>_N <r>_R <GHC.Types.IO>_R <a>_N))) -}
46749c92cdce3a69871c1a9b2d6268ac
  $s$fMonadReaderT_$s$fMonadReaderT_$cp1Monad ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Lib.$s$fApplicativeReaderT -}
e9681b6cfd3fae20fa07daea44378782
  $s$fMonadReaderT_$s$fMonadReaderT_$creturn ::
    a -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ r
                   @ a
                   (eta :: a)
                   (eta1 :: r)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta) `cast` (GHC.Types.N:IO[0] <a>_R) eta2)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<r>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <*>_N <r>_R <GHC.Types.IO>_R <a>_N))) -}
53e58b5a3f3c652119b8bbb8030180a6
  $s$fVal[] :: Data.Bson.Val [GHC.Types.Char]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Char]
                  (Data.Bson.$fVal[]_$cp1Val @ GHC.Types.Char Data.Bson.$fValChar)
                  Lib.$s$fVal[]_$s$fVal[]_$cp2Val
                  Lib.$s$fVal[]_$s$fVal[]_$cp3Val
                  Data.Bson.$fValChar_$cvalList
                  Lib.$s$fVal[]_$s$fVal[]_$cvalList
                  Lib.$s$fVal[]_$s$fVal[]_$cvalMaybe
                  Data.Bson.$fValChar_$ccast'List
                  (Data.Bson.$fVal[]_$ccast'List
                     @ GHC.Types.Char
                     Data.Bson.$fValChar)
                  Lib.$s$fVal[]_$s$fVal[]_$ccast'Maybe -}
f2e7683cb87cf0adb3b530250dd8e6b9
  $s$fVal[]_$s$fVal[]_$ccast'Maybe ::
    Data.Bson.Value -> GHC.Base.Maybe (GHC.Base.Maybe [GHC.Types.Char])
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Data.Bson.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> case Data.Bson.$fValChar_$ccast'List wild of wild1 {
                        GHC.Base.Nothing
                        -> GHC.Base.Nothing @ (GHC.Base.Maybe [GHC.Types.Char])
                        GHC.Base.Just x
                        -> GHC.Base.Just
                             @ (GHC.Base.Maybe [GHC.Types.Char])
                             (GHC.Base.Just @ [GHC.Types.Char] x) }
                   Data.Bson.Null -> Data.Bson.$fVal[]11 @ GHC.Types.Char }) -}
e659c8a3d7a2cc8f924879634659b32d
  $s$fVal[]_$s$fVal[]_$cp2Val :: GHC.Show.Show [GHC.Types.Char]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                GHC.Show.$fShow[]_$s$fShow[]1 -}
6c168f9f8775c3c1229d13c9bf4bcfd6
  $s$fVal[]_$s$fVal[]_$cp3Val :: GHC.Classes.Eq [GHC.Types.Char]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.$fEq[]_$s$fEq[]1 -}
17922d6c9596f4f48e30efbd206588df
  $s$fVal[]_$s$fVal[]_$cvalList ::
    [[GHC.Types.Char]] -> Data.Bson.Value
  {- Arity: 1, Strictness: <L,1*U>m4,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: [[GHC.Types.Char]]) ->
                 Data.Bson.Array
                   (GHC.Base.build
                      @ Data.Bson.Value
                      (\ @ b1
                         (c :: Data.Bson.Value -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ [GHC.Types.Char]
                         @ b1
                         (GHC.Base.mapFB
                            @ Data.Bson.Value
                            @ b1
                            @ [GHC.Types.Char]
                            c
                            Data.Bson.$fValChar_$cvalList)
                         n
                         eta))) -}
775b3b4db2cc9024a5274d6b3ddf0f79
  $s$fVal[]_$s$fVal[]_$cvalMaybe ::
    GHC.Base.Maybe [GHC.Types.Char] -> Data.Bson.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Base.Maybe [GHC.Types.Char]) ->
                 case eta of wild {
                   GHC.Base.Nothing -> Data.Bson.Null
                   GHC.Base.Just x -> Data.Bson.$fValChar_$cvalList x }) -}
a400bde3ce273053129c8d2d956ee8a1
  $tc'File :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10556100704823844496##
                   4917221232056102527##
                   Lib.$trModule
                   Lib.$tc'File1) -}
23cc0578ef0aa93fc5da8ee8704ddb32
  $tc'File1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'File"#) -}
e9d92a430ca085d44b2c974c66bf4b83
  $tc'User :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3535140581853262487##
                   7368440833144303475##
                   Lib.$trModule
                   Lib.$tc'User1) -}
9adcb72af8f84cb9910337c1575dce46
  $tc'User1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'User"#) -}
f726f6ec38c5f669cf477e036969c02e
  $tcFile :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18075828646659238512##
                   192173772367176018##
                   Lib.$trModule
                   Lib.$tcFile1) -}
435a33ab53d22ac03258a95918abd355
  $tcFile1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "File"#) -}
c1e1d2d1413ddb7eef9ccaf3331c3601
  $tcUser :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5291296586540914782##
                   15534099935631922887##
                   Lib.$trModule
                   Lib.$tcUser1) -}
5e9c8e27abbf1572792bfc6d0a455b73
  $tcUser1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "User"#) -}
f038b92bccd593576234580be0f7d43d
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule2 Lib.$trModule1) -}
6386e7d5163b955ae455d3de55e7b954
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lib"#) -}
700fe7278ddc89d934cbdc135c3df164
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "clientServer-0.1.0.0-DLV0f8ZBtlqAJ3yYHbtF5Y"#) -}
fc9303b737ae411b018e09f6073088bd
  $w$c/= ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww3 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } }) -}
70aa3514d57b37c198da2045ce1cd7ff
  $w$c== ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Types.Bool) ->
                 case GHC.Base.eqString ww ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True -> GHC.Classes.$fEqBool_$c== ww2 ww5 } }) -}
fe88b17cda36a023f8450e4e256c9cc4
  $w$c==1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Base.eqString ww1 ww3 }) -}
7da244f483aad76b3dd238b4d2ab42ee
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Types.Bool)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowFile7
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Lib.$fShowFile6
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows8
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows8
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      Lib.$fShowFile5
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Lib.$fShowFile4
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows8
                                            (GHC.Show.showLitString
                                               ww2
                                               (GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.shows8
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     Lib.$fShowFile5
                                                     (GHC.Base.++
                                                        @ GHC.Types.Char
                                                        Lib.$fShowFile3
                                                        (case ww3 of wild {
                                                           GHC.Types.False
                                                           -> GHC.Base.++
                                                                @ GHC.Types.Char
                                                                GHC.Show.shows21
                                                                (GHC.Base.++
                                                                   @ GHC.Types.Char
                                                                   Lib.$fShowFile2
                                                                   x)
                                                           GHC.Types.True
                                                           -> GHC.Base.++
                                                                @ GHC.Types.Char
                                                                GHC.Show.shows20
                                                                (GHC.Base.++
                                                                   @ GHC.Types.Char
                                                                   Lib.$fShowFile2
                                                                   x) }))))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w)) }) -}
cd362bc726419c384c88e02f61d63966
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowUser4
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Lib.$fShowUser3
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows8
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows8
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      Lib.$fShowFile5
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Lib.$fShowUser2
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows8
                                            (GHC.Show.showLitString
                                               ww2
                                               (GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.shows8
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     Lib.$fShowFile2
                                                     x))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w)) }) -}
d518d40c241e33eca48807c4e941cdbd
  $w$ctoEncoding ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
95662718b219cbfe08dbb22accaa5bfa
  $w$ctoEncoding1 ::
    GHC.Base.String
    -> GHC.Base.String -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
8b8cb5b4f06ffb287ff065fcc2304bb4
  $w$ctoJSON ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 3, Strictness: <L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Types.Bool) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Lib.$fFromJSONFile3,
                            case GHC.Magic.runRW#
                                   @ 'GHC.Types.PtrRepLifted
                                   @ Data.Text.Internal.Text
                                   (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    case GHC.Prim.newByteArray#
                                           @ GHC.Prim.RealWorld
                                           8#
                                           s1 of ds1 { (#,#) ipv ipv1 ->
                                    Lib.$wouter1
                                      (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                                      Lib.$fToJSONFile1
                                      ww
                                      0#
                                      ipv }) of ds1 { (#,#) ipv ipv1 ->
                            case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                            Data.Aeson.Types.Internal.String dt } })
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Lib.$fFromJSONFile2,
                               case GHC.Magic.runRW#
                                      @ 'GHC.Types.PtrRepLifted
                                      @ Data.Text.Internal.Text
                                      (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.newByteArray#
                                              @ GHC.Prim.RealWorld
                                              8#
                                              s1 of ds1 { (#,#) ipv ipv1 ->
                                       Lib.$wouter
                                         (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                                         Lib.$fToJSONFile1
                                         ww1
                                         0#
                                         ipv }) of ds1 { (#,#) ipv ipv1 ->
                               case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                               Data.Aeson.Types.Internal.String dt } })
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Lib.$fFromJSONFile1, Data.Aeson.Types.Internal.$WBool ww2)
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 (# dt #) }) -}
146518bc1db31b2af543e3814cb59a59
  $w$ctoJSON1 ::
    GHC.Base.String
    -> GHC.Base.String -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String) (ww1 :: GHC.Base.String) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Lib.$fFromJSONUser2,
                            case GHC.Magic.runRW#
                                   @ 'GHC.Types.PtrRepLifted
                                   @ Data.Text.Internal.Text
                                   (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    case GHC.Prim.newByteArray#
                                           @ GHC.Prim.RealWorld
                                           8#
                                           s1 of ds1 { (#,#) ipv ipv1 ->
                                    Lib.$wouter3
                                      (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                                      Lib.$fToJSONFile1
                                      ww
                                      0#
                                      ipv }) of ds1 { (#,#) ipv ipv1 ->
                            case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                            Data.Aeson.Types.Internal.String dt } })
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Lib.$fFromJSONUser1,
                               case GHC.Magic.runRW#
                                      @ 'GHC.Types.PtrRepLifted
                                      @ Data.Text.Internal.Text
                                      (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.newByteArray#
                                              @ GHC.Prim.RealWorld
                                              8#
                                              s1 of ds1 { (#,#) ipv ipv1 ->
                                       Lib.$wouter2
                                         (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                                         Lib.$fToJSONFile1
                                         ww1
                                         0#
                                         ipv }) of ds1 { (#,#) ipv ipv1 ->
                               case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                               Data.Aeson.Types.Internal.String dt } })
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 (# dt #) }) -}
1aaab78f5e5156cf7f7d1f347b700a18
  $wouter ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
d4a17597dfb27289e92c3f167a289b1c
  $wouter1 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
1e10ca7d0fcdfcc8b0add79b6af84c43
  $wouter2 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
550da44450913b8b5328c5cc3f1ab879
  $wouter3 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
0663f0c8035f9b1d003a5b64782332fc
  type API =
    "users"
    Servant.API.Sub.:> Servant.API.Verbs.Get
                         '[Servant.API.ContentTypes.JSON] [Lib.User]
84a3d3c4b6b50f42faed19dc90769bf0
  data File
    = File {fileName :: GHC.Base.String,
            fileContents :: GHC.Base.String,
            fileLock :: GHC.Types.Bool}
5565f9d0a0fb57f559f0e2db40ea7aa4
  data User
    = User {username :: GHC.Base.String, password :: GHC.Base.String}
c68bedecc91c34d408a490ac24526789
  fileContents :: Lib.File -> GHC.Base.String
  RecSel Left Lib.File
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.File) ->
                 case ds of wild { Lib.File ds1 ds2 ds3 -> ds2 }) -}
d67e79951b316cc2783f500fb7b62f68
  fileLock :: Lib.File -> GHC.Types.Bool
  RecSel Left Lib.File
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.File) ->
                 case ds of wild { Lib.File ds1 ds2 ds3 -> ds3 }) -}
81ab4deb7339a2ebc662b38aa0f838c6
  fileName :: Lib.File -> GHC.Base.String
  RecSel Left Lib.File
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.File) ->
                 case ds of wild { Lib.File ds1 ds2 ds3 -> ds1 }) -}
3607fadad6a301c35e2aad9d5ce0bab6
  password :: Lib.User -> GHC.Base.String
  RecSel Left Lib.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.User) ->
                 case ds of wild { Lib.User ds1 ds2 -> ds2 }) -}
88c98e8e796e2a6e594f48d228cb0648
  startApp :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.startApp1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
240144e0d27746adda8c0e4b33140a78
  startApp1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        Lib.startApp4
                        Database.MongoDB.Connection.defaultPort
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Lib.startApp3
                        (Database.MongoDB.Query.MongoContext
                           ipv3
                           Database.MongoDB.Query.master
                           Lib.startApp2)
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 Database.MongoDB.Internal.Protocol.close1 ipv3 ipv4 } } } } }) -}
67ab224f45755511a49b246051246bd8
  startApp2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "dbase"#) -}
a84acfd8a2d4725dd4e2b3ef9e32c040
  startApp3 ::
    Database.MongoDB.Query.MongoContext
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U> -}
29b73969c4e96d7113e6b4f6a157d881
  startApp4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "127.0.0.1"#) -}
9839fe92bfb133d1cdb2905b08dd28da
  username :: Lib.User -> GHC.Base.String
  RecSel Left Lib.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.User) ->
                 case ds of wild { Lib.User ds1 ds2 -> ds1 }) -}
instance GHC.Classes.Eq [Lib.File] = Lib.$fEqFile
instance GHC.Classes.Eq [Lib.User] = Lib.$fEqUser
instance Data.Aeson.Types.Class.FromJSON [Lib.File]
  = Lib.$fFromJSONFile
instance Data.Aeson.Types.Class.FromJSON [Lib.User]
  = Lib.$fFromJSONUser
instance GHC.Show.Show [Lib.File] = Lib.$fShowFile
instance GHC.Show.Show [Lib.User] = Lib.$fShowUser
instance Data.Aeson.Types.Class.ToJSON [Lib.File]
  = Lib.$fToJSONFile
instance Data.Aeson.Types.Class.ToJSON [Lib.User]
  = Lib.$fToJSONUser
"SPEC/Lib $fApplicativeReaderT @ IO _" [ALWAYS] forall @ r
                                                       ($dApplicative :: GHC.Base.Applicative
                                                                           GHC.Types.IO)
  Control.Monad.Trans.Reader.$fApplicativeReaderT @ GHC.Types.IO
                                                  @ r
                                                  $dApplicative
  = Lib.$s$fApplicativeReaderT @ r
"SPEC/Lib $fApplicativeReaderT_$c<*> @ IO _" [ALWAYS] forall @ r
                                                             ($dApplicative :: GHC.Base.Applicative
                                                                                 GHC.Types.IO)
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<*> @ GHC.Types.IO
                                                        @ r
                                                        $dApplicative
  = Lib.$s$fApplicativeReaderT_$s$fApplicativeReaderT_$c<*> @ r
"SPEC/Lib $fApplicativeReaderT_$cp1Applicative @ IO _" [ALWAYS] forall @ r
                                                                       ($dApplicative :: GHC.Base.Applicative
                                                                                           GHC.Types.IO)
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$cp1Applicative @ GHC.Types.IO
                                                                  @ r
                                                                  $dApplicative
  = Lib.$s$fApplicativeReaderT_$s$fApplicativeReaderT_$cp1Applicative
      @ r
"SPEC/Lib $fFunctorReaderT @ IO _" [ALWAYS] forall @ r
                                                   ($dFunctor :: GHC.Base.Functor GHC.Types.IO)
  Control.Monad.Trans.Reader.$fFunctorReaderT @ GHC.Types.IO
                                              @ r
                                              $dFunctor
  = Lib.$s$fApplicativeReaderT_$s$fFunctorReaderT @ r
"SPEC/Lib $fFunctorReaderT_$c<$ @ IO _" [ALWAYS] forall @ r
                                                        ($dFunctor :: GHC.Base.Functor GHC.Types.IO)
  Control.Monad.Trans.Reader.$fFunctorReaderT_$c<$ @ GHC.Types.IO
                                                   @ r
                                                   $dFunctor
  = Lib.$s$fApplicativeReaderT_$s$fFunctorReaderT_$c<$ @ r
"SPEC/Lib $fFunctorReaderT_$cfmap @ IO _" [ALWAYS] forall @ r
                                                          ($dFunctor :: GHC.Base.Functor
                                                                          GHC.Types.IO)
  Control.Monad.Trans.Reader.$fFunctorReaderT_$cfmap @ GHC.Types.IO
                                                     @ r
                                                     $dFunctor
  = Lib.$s$fApplicativeReaderT_$s$fFunctorReaderT_$cfmap @ r
"SPEC/Lib $fMonadReaderT @ IO _" [ALWAYS] forall @ r
                                                 ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Control.Monad.Trans.Reader.$fMonadReaderT @ GHC.Types.IO
                                            @ r
                                            $dMonad
  = Lib.$s$fMonadReaderT @ r
"SPEC/Lib $fMonadReaderT_$c>> @ IO _" [ALWAYS] forall @ r
                                                      ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>> @ GHC.Types.IO
                                                 @ r
                                                 $dMonad
  = Lib.$s$fMonadReaderT_$s$fMonadReaderT_$c>> @ r
"SPEC/Lib $fMonadReaderT_$c>>= @ IO _" [ALWAYS] forall @ r
                                                       ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>>= @ GHC.Types.IO
                                                  @ r
                                                  $dMonad
  = Lib.$s$fMonadReaderT_$s$fMonadReaderT_$c>>= @ r
"SPEC/Lib $fMonadReaderT_$cfail @ IO _" [ALWAYS] forall @ r
                                                        ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Control.Monad.Trans.Reader.$fMonadReaderT_$cfail @ GHC.Types.IO
                                                   @ r
                                                   $dMonad
  = Lib.$s$fMonadReaderT_$s$fMonadReaderT_$cfail @ r
"SPEC/Lib $fMonadReaderT_$cp1Monad @ IO _" [ALWAYS] forall @ r
                                                           ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Control.Monad.Trans.Reader.$fMonadReaderT_$cp1Monad @ GHC.Types.IO
                                                      @ r
                                                      $dMonad
  = Lib.$s$fMonadReaderT_$s$fMonadReaderT_$cp1Monad @ r
"SPEC/Lib $fMonadReaderT_$creturn @ IO _" [ALWAYS] forall @ r
                                                          ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Control.Monad.Trans.Reader.$fMonadReaderT_$creturn @ GHC.Types.IO
                                                     @ r
                                                     $dMonad
  = Lib.$s$fMonadReaderT_$s$fMonadReaderT_$creturn @ r
"SPEC/Lib $fVal[] @ Char" [ALWAYS] forall ($dVal :: Data.Bson.Val
                                                      GHC.Types.Char)
  Data.Bson.$fVal[] @ GHC.Types.Char $dVal = Lib.$s$fVal[]
"SPEC/Lib $fVal[]_$ccast'Maybe @ Char" [ALWAYS] forall ($dVal :: Data.Bson.Val
                                                                   GHC.Types.Char)
  Data.Bson.$fVal[]_$ccast'Maybe @ GHC.Types.Char $dVal
  = Lib.$s$fVal[]_$s$fVal[]_$ccast'Maybe
"SPEC/Lib $fVal[]_$cp2Val @ Char" [ALWAYS] forall ($dVal :: Data.Bson.Val
                                                              GHC.Types.Char)
  Data.Bson.$fVal[]_$cp2Val @ GHC.Types.Char $dVal
  = Lib.$s$fVal[]_$s$fVal[]_$cp2Val
"SPEC/Lib $fVal[]_$cp3Val @ Char" [ALWAYS] forall ($dVal :: Data.Bson.Val
                                                              GHC.Types.Char)
  Data.Bson.$fVal[]_$cp3Val @ GHC.Types.Char $dVal
  = Lib.$s$fVal[]_$s$fVal[]_$cp3Val
"SPEC/Lib $fVal[]_$cvalList @ Char" [ALWAYS] forall ($dVal :: Data.Bson.Val
                                                                GHC.Types.Char)
  Data.Bson.$fVal[]_$cvalList @ GHC.Types.Char $dVal
  = Lib.$s$fVal[]_$s$fVal[]_$cvalList
"SPEC/Lib $fVal[]_$cvalMaybe @ Char" [ALWAYS] forall ($dVal :: Data.Bson.Val
                                                                 GHC.Types.Char)
  Data.Bson.$fVal[]_$cvalMaybe @ GHC.Types.Char $dVal
  = Lib.$s$fVal[]_$s$fVal[]_$cvalMaybe
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

